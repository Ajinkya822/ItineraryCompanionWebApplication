{"ast":null,"code":"var _jsxFileName = \"/Users/ajinkya/Downloads/ReactWorkspace/travelapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from './components/Header/Header';\nimport List from './components/List/List';\nimport Map from './components/Map/Map';\nimport { CssBaseline, Grid } from '@material-ui/core';\nimport { getPlacesData } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [coordinates, setCoordinates] = useState({});\n  const [bounds, setBounds] = useState();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(_ref => {\n      let {\n        coords: {\n          latitude,\n          longitude\n        }\n      } = _ref;\n      setCoordinates({\n        lat: latitude,\n        lng: longitude\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log(coordinates, bounds);\n    getPlacesData(bounds.latitude, 15).then(data => {\n      // console.log(data);\n      setPlaces(data);\n    });\n  }, [coordinates, bounds]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          places: places\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          setCoordinates: setCoordinates,\n          setBounds: setBounds,\n          coordinates: coordinates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"eKkNqe/z/AL2RiBYt+/zJLvxpbw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ajinkya/Downloads/ReactWorkspace/travelapp/src/App.js"],"names":["React","useState","useEffect","Header","List","Map","CssBaseline","Grid","getPlacesData","App","places","setPlaces","coordinates","setCoordinates","bounds","setBounds","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","lat","lng","console","log","then","data","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAGA,SAAQC,WAAR,EAAqBC,IAArB,QAAgC,mBAAhC;AACA,SAASC,aAAT,QAA8B,OAA9B;;;;AAEA,MAAMC,GAAG,GAAC,MAAK;AAAA;;AACX,QAAM,CAACC,MAAD,EAASC,SAAT,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAoBd,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChBc,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,QAAyC;AAAA,UAAxC;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAF;AAAYC,UAAAA;AAAZ;AAAV,OAAwC;AAChFR,MAAAA,cAAc,CAAC;AAAES,QAAAA,GAAG,EAAEF,QAAP;AAAiBG,QAAAA,GAAG,EAAEF;AAAtB,OAAD,CAAd;AACD,KAFD;AAGD,GAJU,EAIR,EAJQ,CAAT;AAMFnB,EAAAA,SAAS,CAAC,MAAM;AACVsB,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ,EAAwBE,MAAxB;AACDN,IAAAA,aAAa,CAACM,MAAM,CAACM,QAAR,EAAiB,EAAjB,CAAb,CACEM,IADF,CACQC,IAAD,IAAU;AACb;AACChB,MAAAA,SAAS,CAACgB,IAAD,CAAT;AACH,KAJF;AAMH,GARO,EAQL,CAACf,WAAD,EAAcE,MAAd,CARK,CAAT;AAiBE,sBACI;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,KAAK,EAAE;AAACc,QAAAA,KAAK,EAAC;AAAP,OAAnC;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,MAAM,EAAElB;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,+BACI,QAAC,GAAD;AACI,UAAA,cAAc,EAAEG,cADpB;AAEI,UAAA,SAAS,EAAEE,SAFf;AAGI,UAAA,WAAW,EAAEH;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAkBH,CA/CD;;GAAMH,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport Header from './components/Header/Header';\nimport List from './components/List/List';\nimport Map from './components/Map/Map';\n\n\nimport {CssBaseline, Grid} from '@material-ui/core';\nimport { getPlacesData } from \"./api\";\n\nconst App=() =>{\n    const [places, setPlaces]=useState([]);\n\n    const [coordinates, setCoordinates] = useState({});\n    const [bounds, setBounds]=useState();\n\n    useEffect(() => {\n    navigator.geolocation.getCurrentPosition(({ coords: { latitude, longitude } }) => {\n      setCoordinates({ lat: latitude, lng: longitude });\n    });\n  }, []);\n\n  useEffect(() => {\n        console.log(coordinates,bounds);\n       getPlacesData(bounds.latitude,15)\n        .then((data) => {\n           // console.log(data);\n            setPlaces(data);\n        });\n    \n   }, [coordinates, bounds]);\n\n\n\n\n\n  \n\n\n    return(\n        <>\n            <CssBaseline />\n            <Header />\n            <Grid container spacing={3} style={{width:'100%'}}>\n                <Grid item xs={12} md={4}>\n                    <List places={places} />\n                </Grid>\n                <Grid item xs={12} md={8}>\n                    <Map \n                        setCoordinates={setCoordinates}\n                        setBounds={setBounds}\n                        coordinates={coordinates}\n                    />\n                </Grid>\n            </Grid>    \n        </>\n    );\n}\n\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}