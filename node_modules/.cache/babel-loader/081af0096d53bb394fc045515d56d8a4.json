{"ast":null,"code":"import axios from 'axios';\nconst URL = 'https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary';\nconst options = {\n  params: {\n    bl_latitude: '11.84',\n    tr_latitude: '12.83',\n    bl_longitude: '109.09',\n    tr_longitude: '109.14'\n  },\n  headers: {\n    'x-rapidapi-host': 'travel-advisor.p.rapidapi.com',\n    'x-rapidapi-key': '3ae4440b4emshfb1681d5c80ef22p1eb9bajsn7584cb46863c'\n  }\n};\nexport const getPlacesData = async (sw, ne) => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await axios.get(URL, options);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/ajinkya/Downloads/ReactWorkspace/travelapp/src/api/index.js"],"names":["axios","URL","options","params","bl_latitude","tr_latitude","bl_longitude","tr_longitude","headers","getPlacesData","sw","ne","data","get","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAE,oEAAX;AAGA,MAAMC,OAAO,GAAC;AACVC,EAAAA,MAAM,EAAC;AACHC,IAAAA,WAAW,EAAE,OADV;AAEHC,IAAAA,WAAW,EAAE,OAFV;AAGHC,IAAAA,YAAY,EAAE,QAHX;AAIHC,IAAAA,YAAY,EAAE;AAJX,GADG;AAOVC,EAAAA,OAAO,EAAE;AACL,uBAAmB,+BADd;AAEL,sBAAkB;AAFb;AAPC,CAAd;AAeA,OAAO,MAAMC,aAAa,GAAE,OAAMC,EAAN,EAASC,EAAT,KAAc;AACtC,MAAG;AACC,UAAM;AAACC,MAAAA,IAAI,EAAC;AAAEA,QAAAA;AAAF;AAAN,QAAiB,MAAMZ,KAAK,CAACa,GAAN,CAAUZ,GAAV,EAAcC,OAAd,CAA7B;AACA,WAAOU,IAAP;AACH,GAHD,CAIA,OAAME,KAAN,EAAY;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CARM","sourcesContent":["import axios from 'axios';\n\nconst URL= 'https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary';\n\n\nconst options={\n    params:{\n        bl_latitude: '11.84',\n        tr_latitude: '12.83',\n        bl_longitude: '109.09',\n        tr_longitude: '109.14',\n    },\n    headers: {\n        'x-rapidapi-host': 'travel-advisor.p.rapidapi.com',\n        'x-rapidapi-key': '3ae4440b4emshfb1681d5c80ef22p1eb9bajsn7584cb46863c'\n     },\n};\n\n\n\nexport const getPlacesData= async(sw,ne)=>{\n    try{\n        const {data:{ data } }=await axios.get(URL,options);\n        return data;\n    }\n    catch(error){\n        console.log(error);\n    }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}