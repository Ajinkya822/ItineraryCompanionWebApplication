{"ast":null,"code":"var _jsxFileName = \"/Users/ajinkya/Downloads/ReactWorkspace/travelapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from './components/Header/Header';\nimport List from './components/List/List';\nimport Map from './components/Map/Map';\nimport { CssBaseline, Grid } from '@material-ui/core';\nimport { getPlacesData } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [childClicked, setChildClicked] = useState(null);\n  const [coordinates, setCoordinates] = useState([]);\n  const [bounds, setBounds] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [type, setType] = useState('restaurants');\n  const [rating, setRating] = useState('');\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(_ref => {\n      let {\n        coords: {\n          latitude,\n          longitude\n        }\n      } = _ref;\n      setCoordinates({\n        lat: latitude,\n        lng: longitude\n      });\n    });\n  }, []);\n  useEffect(() => {\n    setIsLoading(true);\n    getPlacesData(type, bounds.sw, bounds.ne).then(data => {\n      setPlaces(data);\n      setIsLoading(false);\n    });\n  }, [type, coordinates, bounds]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          places: places,\n          childClicked: childClicked,\n          isLoading: isLoading,\n          type: type,\n          setType: setType,\n          rating: rating,\n          setRating: setRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          setCoordinates: setCoordinates,\n          setBounds: setBounds,\n          coordinates: coordinates,\n          places: places,\n          setChildClicked: setChildClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"vWO2+jDBPo1n8hWLkDe7FPndIXM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ajinkya/Downloads/ReactWorkspace/travelapp/src/App.js"],"names":["React","useState","useEffect","Header","List","Map","CssBaseline","Grid","getPlacesData","App","places","setPlaces","childClicked","setChildClicked","coordinates","setCoordinates","bounds","setBounds","isLoading","setIsLoading","type","setType","rating","setRating","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","lat","lng","sw","ne","then","data","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport Header from './components/Header/Header';\nimport List from './components/List/List';\nimport Map from './components/Map/Map';\n\n\nimport {CssBaseline, Grid} from '@material-ui/core';\nimport { getPlacesData } from \"./api\";\n\nconst App=() =>{\n    const [places, setPlaces]=useState([]);\n    const [childClicked, setChildClicked] = useState(null);\n    const [coordinates, setCoordinates] = useState([]);\n    const [bounds, setBounds]=useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [type, setType]= useState('restaurants');\n    const [rating, setRating]= useState('');\n\n    useEffect(() => {\n    navigator.geolocation.getCurrentPosition(({ coords: { latitude, longitude } }) => {\n      setCoordinates({ lat: latitude, lng: longitude });\n    });\n  }, []);\n\n  useEffect(() => {\n        setIsLoading(true);\n       getPlacesData(type, bounds.sw,bounds.ne)\n        .then((data) => {\n            setPlaces(data);\n            setIsLoading(false);\n        });\n    \n   }, [type, coordinates, bounds]);\n\nreturn(\n        <>\n            <CssBaseline />\n            <Header />\n            <Grid container spacing={3} style={{width:'100%'}}>\n                <Grid item xs={12} md={4}>\n                    <List \n                        places={places} \n                        childClicked={childClicked}\n                        isLoading={isLoading}\n                        type={type}\n                        setType={setType}\n                        rating={rating}\n                        setRating={setRating}\n                    />\n                </Grid>\n                <Grid item xs={12} md={8}>\n                    <Map \n                        setCoordinates={setCoordinates}\n                        setBounds={setBounds}\n                        coordinates={coordinates}\n                        places={places}\n                        setChildClicked={setChildClicked}\n                    />\n                </Grid>\n            </Grid>    \n        </>\n    );\n}\n\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}